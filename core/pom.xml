<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>spark</groupId>
	<artifactId>core</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>core</name>
	<url>http://maven.apache.org</url>

	<repositories>
		<repository>
			<id>typesafe</id>
			<name>Typesafe Repository</name>
			<url>http://repo.typesafe.com/typesafe/releases/</url>
		</repository>

		<repository>
			<id>Spary Repository</id>
			<name>spray</name>
			<url>http://repo.spray.io</url>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<scala.version>2.9.3</scala.version>
		<mesos.version>0.9.0-incubating</mesos.version>
		<akka.version>2.0.5</akka.version>
		<spray.version>1.0-M2.1</spray.version>
		<spray.json.version>1.1.1</spray.json.version>
		<slf4j.version>1.6.1</slf4j.version>
		<cdh.version>4.1.2</cdh.version>
		<log4j.version>1.2.17</log4j.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>7.5.3.v20111011</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>11.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ning</groupId>
			<artifactId>compress-lzf</artifactId>
			<version>0.8.4</version>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm-all</artifactId>
			<version>3.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>2.4.1</version>
		</dependency>
		<dependency>
			<groupId>de.javakaffee</groupId>
			<artifactId>kryo-serializers</artifactId>
			<version>0.22</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-remote</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-slf4j</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>it.unimi.dsi</groupId>
			<artifactId>fastutil</artifactId>
			<version>6.4.4</version>
		</dependency>
		<dependency>
			<groupId>colt</groupId>
			<artifactId>colt</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>cc.spray</groupId>
			<artifactId>spray-can</artifactId>
			<version>${spray.version}</version>
		</dependency>
		<dependency>
			<groupId>cc.spray</groupId>
			<artifactId>spray-server</artifactId>
			<version>${spray.version}</version>
		</dependency>
		<dependency>
			<groupId>cc.spray</groupId>
			<artifactId>spray-json_2.9.2</artifactId>
			<version>${spray.json.version}</version>
		</dependency>
		<dependency>
			<groupId>org.tomdz.twirl</groupId>
			<artifactId>twirl-api</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.github.scala-incubator.io</groupId>
			<artifactId>scala-io-file_2.9.2</artifactId>
			<version>0.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.mesos</groupId>
			<artifactId>mesos</artifactId>
			<version>${mesos.version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>4.0.0.Beta2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.4.2.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>jline</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.9.3</artifactId>
			<version>1.9.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalacheck</groupId>
			<artifactId>scalacheck_${scala.version}</artifactId>
			<version>1.10.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.novocode</groupId>
			<artifactId>junit-interface</artifactId>
			<version>0.8</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-core</artifactId>
			<version>1.0.4</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>hadoop1</id>
			<properties>
				<hadoop.major.version>1</hadoop.major.version>
			</properties>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>org.apache.hadoop</groupId>
						<artifactId>hadoop-core</artifactId>
						<version>1.0.4</version>
					</dependency>
				</dependencies>
			</dependencyManagement>
		</profile>

		<profile>
			<id>hadoop2</id>
			<properties>
				<hadoop.major.version>2</hadoop.major.version>
			</properties>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>org.apache.hadoop</groupId>
						<artifactId>hadoop-core</artifactId>
						<version>2.0.0-mr1-cdh${cdh.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.hadoop</groupId>
						<artifactId>hadoop-client</artifactId>
						<version>2.0.0-mr1-cdh${cdh.version}</version>
					</dependency>
					<!-- Specify Avro version because Kafka also has it as a dependency -->
					<dependency>
						<groupId>org.apache.avro</groupId>
						<artifactId>avro</artifactId>
						<version>1.7.1.cloudera.2</version>
					</dependency>
					<dependency>
						<groupId>org.apache.avro</groupId>
						<artifactId>avro-ipc</artifactId>
						<version>1.7.1.cloudera.2</version>
					</dependency>
				</dependencies>
			</dependencyManagement>
		</profile>

		<profile>
			<id>hadoop2-yarn</id>
			<properties>
				<hadoop.major.version>2</hadoop.major.version>
				<!-- 0.23.* is same as 2.0.* - except hardened to run production jobs -->
				<!-- <yarn.version>0.23.7</yarn.version> -->
				<yarn.version>2.0.2-alpha</yarn.version>
			</properties>

			<repositories>
				<repository>
					<id>maven-root</id>
					<name>Maven root repository</name>
					<url>http://repo1.maven.org/maven2/</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>

			<dependencyManagement>
				<dependencies>
					<!-- TODO: check versions, bringover from yarn branch ! -->
					<dependency>
						<groupId>org.apache.hadoop</groupId>
						<artifactId>hadoop-client</artifactId>
						<version>${yarn.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.hadoop</groupId>
						<artifactId>hadoop-yarn-api</artifactId>
						<version>${yarn.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.hadoop</groupId>
						<artifactId>hadoop-yarn-common</artifactId>
						<version>${yarn.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.hadoop</groupId>
						<artifactId>hadoop-yarn-client</artifactId>
						<version>${yarn.version}</version>
					</dependency>
					<!-- Specify Avro version because Kafka also has it as a dependency -->
					<dependency>
						<groupId>org.apache.avro</groupId>
						<artifactId>avro</artifactId>
						<version>1.7.1.cloudera.2</version>
					</dependency>
					<dependency>
						<groupId>org.apache.avro</groupId>
						<artifactId>avro-ipc</artifactId>
						<version>1.7.1.cloudera.2</version>
					</dependency>
				</dependencies>
			</dependencyManagement>
		</profile>
	</profiles>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.1.1</version>
					<executions>
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>3.0.0</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<version>${java.version}</version>
									</requireJavaVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
				</plugin>
				<plugin>
					<groupId>org.tomdz.twirl</groupId>
					<artifactId>twirl-maven-plugin</artifactId>
					<version>1.0.1</version>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<id>scala-compile-first</id>
							<phase>process-resources</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
						<execution>
							<id>scala-test-compile-first</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>testCompile</goal>
							</goals>
						</execution>
						<execution>
							<id>attach-scaladocs</id>
							<phase>verify</phase>
							<goals>
								<goal>doc-jar</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<scalaVersion>${scala.version}</scalaVersion>
						<recompileMode>incremental</recompileMode>
						<args>
							<arg>-unchecked</arg>
							<arg>-optimise</arg>
						</args>
						<jvmArgs>
							<jvmArg>-Xms64m</jvmArg>
							<jvmArg>-Xmx1024m</jvmArg>
						</jvmArgs>
						<javacArgs>
							<javacArg>-source</javacArg>
							<javacArg>${java.version}</javacArg>
							<javacArg>-target</javacArg>
							<javacArg>${java.version}</javacArg>
						</javacArgs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.5.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>UTF-8</encoding>
						<maxmem>1024m</maxmem>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12.4</version>
					<configuration>
						<!-- Uses scalatest instead -->
						<skipTests>true</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.scalatest</groupId>
					<artifactId>scalatest-maven-plugin</artifactId>
					<version>1.0-M2</version>
					<configuration>
						<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						<junitxml>.</junitxml>
						<filereports>${project.build.directory}/SparkTestSuite.txt</filereports>
						<argLine>-Xms64m -Xmx1024m</argLine>
						<stderr />
					</configuration>
					<executions>
						<execution>
							<id>test</id>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2.1</version>
					<configuration>
						<attach>true</attach>
					</configuration>
					<executions>
						<execution>
							<id>create-source-jar</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
	</build>




</project>
